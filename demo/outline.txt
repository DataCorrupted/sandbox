Idea
	How can gradebot prevent mal-homework from poaching testcase?
	now it's using lxd, with no internet, but recall your fisrt hw.
Philociphy
	lxd: If you can't see the world, you can't destory it. 
		pros: Internet can be restricted to certain bandwidth.
		cons: Internet is a yes or no question.( you either see it or not)
	basic assumption: without syscall, you can do nothing dangerous.
	ours: If you need my permission for every syscall you make, you can never destory the world because I won't allow it.
	Same thing to the Internet, if you are only allowed to connect to certain ip, then everyting's fine.
Implmentation
	tracer & safe-box
	Incapulsalization
		struct tracee {
			pid	( The most important thing)
			blabla
		}
		tracee.deny();
	file
		we focus on open syscall rather write or read.
		you got your testcase by file stream, but can't open a file to record it.
		those outside /home are permitted. ( os will stop them anyway. )
		those inside pwd are also permitted.
		those outside pwd but inside /home will need conf file.
	ip 
		we focus on connect, mostly client part.
		client: 
			socket -> connect -> send <-> receive
		server:
			socket -> bind -> listen -> accept -> send <-> receive
		only allowed ip will do.

Demo
	File: file.c 
	Internet: 
		lxd + wget 
		lxd + git clone
Future work
	as to open file control, we hope we can check for file mode later.
	we want to future trace dns server data to make sure that the programme is not access bad things in the same domain. (for example, the homework goes to github and download some third-party library.)
	we hope we can focus on accept so that safe-box can be used on server application.
Q&A

File Syscall Intel x86-64
	rax rdi
	0	sys_read		unsigned int fd		char *buf	size_t count			
	1	sys_write		unsigned int fd		const char *buf	size_t count			
	2	sys_open		const char *filename	int flags	int mode			
	3	sys_close		unsigned int fd					
	4	sys_stat		const char *filename	struct stat *statbuf				
	5	sys_fstat		unsigned int fd			struct stat *statbuf				
	6	sys_lstat		fconst char * filename	struct stat *statbuf				
	7	sys_poll		struct poll_fd *ufds	unsigned int nfds	long timeout_msecs			
	8	sys_lseek		unsigned int fd			off_t offset	unsigned int origin	
	17	sys_pread64		unsigned long fd		char *buf	size_t count	loff_t pos		
	18	sys_pwrite64	unsigned int	 	fd	const char *buf	size_t count	loff_t pos		
	19	sys_readv		unsigned long	 	fd	const struct iovec *vec	unsigned long vlen			
	20	sys_writev		unsigned long		fd	const struct iovec *vec	unsigned long vlen			
	21	sys_access		const char *filename	int mode				
	22	sys_pipe		int *filedes		
Network Syscall Intel x86-64
	rax rdi			rsi 		rdx			r10 		r8		r9
	41	sys_socket	int family	int type	int protocol			
	42	sys_connect	int fd	struct sockaddr *uservaddr	int addrlen			
	43	sys_accept	int fd	struct sockaddr *upeer_sockaddr	int *upeer_addrlen			
	44	sys_sendto	int fd	void *buff	size_t len	unsigned flags	struct sockaddr *addr	int addr_len
	45	sys_recvfrom	int fd	void *ubuf	size_t size	unsigned flags	struct sockaddr *addr	int *addr_len
	46	sys_sendmsg	int fd	struct msghdr *msg	unsigned flags			
	47	sys_recvmsg	int fd	struct msghdr *msg	unsigned int flags			
	48	sys_shutdown	int fd	int how				
	49	sys_bind	int fd	struct sokaddr *umyaddr	int addrlen			
	50	sys_listen	int fd	int backlog				
	51	sys_getsockname	int fd	struct sockaddr *usockaddr	int *usockaddr_len			
	52	sys_getpeername	int fd	struct sockaddr *usockaddr	int *usockaddr_len			
	53	sys_socketpair	int family	int type	int protocol	int *usockvec		
	54	sys_setsockopt	int fd	int level	int optname	char *optval	int optlen	
	55	sys_getsockopt	int fd	int level	int optname	char *optval	int *optlen